-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Initial project template from stack
--   
--   Please see README.md
@package hamilton
@version 0.1.0.0

module Numeric.Hamilton
data Config :: Nat -> Type
[Cfg] :: {cfgPos :: !(R n), cfgVel :: !(R n)} -> Config n
data Phase :: Nat -> Type
[Phs] :: {phsPos :: !(R n), phsMom :: !(R n)} -> Phase n
data System :: Nat -> Nat -> Type
[Sys] :: {sysMass :: R m, sysCoords :: R n -> R m, sysJacobian :: R n -> L m n, sysJacobian2 :: R n -> Vector m (Sym n), sysPotential :: R m -> Double, sysPotentialGrad :: R m -> R m} -> System m n
mkSystem :: forall m n. (KnownNat m, KnownNat n) => R m -> (forall a. RealFloat a => Vector n a -> Vector m a) -> (forall a. RealFloat a => Vector m a -> a) -> System m n
mkPhase :: (KnownNat m, KnownNat n) => System m n -> Config n -> Phase n
momenta :: (KnownNat m, KnownNat n) => System m n -> Config n -> R n
velocities :: (KnownNat m, KnownNat n) => System m n -> Phase n -> R n
ke :: (KnownNat m, KnownNat n) => System m n -> Config n -> Double
keP :: (KnownNat m, KnownNat n) => System m n -> Phase n -> Double
lagrangian :: (KnownNat m, KnownNat n) => System m n -> Config n -> Double
hamiltonian :: (KnownNat m, KnownNat n) => System m n -> Phase n -> Double
